-- Load Kavo UI Library
local success, Library = pcall(function()
    return loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
end)
if not success then
    warn("Failed to load Kavo UI Library")
    return
end

local Window = Library.CreateLib("Luffy Hub - Arsenal", "GrapeTheme")

-- Create the ESP GUI (for name tags)
local ESPGui = Instance.new("ScreenGui")
ESPGui.Name = "ESPGui"
ESPGui.Parent = game.CoreGui
ESPGui.Enabled = false -- Initially disabled

-- Services
local Players = game:GetService("Players")
local Teams = game:GetService("Teams")
local Workspace = game:GetService("Workspace")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer
local LocalTeam = LocalPlayer.Team
local Camera = Workspace.CurrentCamera

-- Fly System Variables (Near Noclip)
local flyActive = false
local flyConnection

-- Noclip System Variables
local noclipActive = false
local noclipConnections = {}

-- Simple Name ESP System
local ESP = {
    Enabled = false,
    TeamCheck = true, -- For name ESP
    Color = Color3.new(1, 1, 1), -- Default white color
    espElements = {} -- Table to store created ESP GUI elements
}

-- Helper Functions
local function GetDistanceFromCamera(part)
    return (Camera.CFrame.Position - part.Position).Magnitude
end

local function WorldToViewport(worldPos)
    local viewportPoint = Camera:WorldToViewportPoint(worldPos)
    return viewportPoint.Z > 0 and viewportPoint or nil -- Only return if in front of camera
end

-- Fly Movement Function (Keep this as is)
local function toggleFlyMovement()
    local player = game.Players.LocalPlayer
    local character = player.Character
    local humanoid = character and character:FindFirstChild("Humanoid")
    local humanoidRootPart = character and character:FindFirstChild("HumanoidRootPart")

    if flyActive then
        if humanoid then
            humanoid.PlatformStand = true
        end
        flyConnection = RunService.Stepped:Connect(function()
            if humanoidRootPart and Camera then
                local moveDirection = Vector3.new()
                if UserInputService:IsKeyDown(Enum.KeyCode.W) then
                    moveDirection = moveDirection + Camera.CFrame.LookVector
                end
                if UserInputService:IsKeyDown(Enum.KeyCode.S) then
                    moveDirection = moveDirection - Camera.CFrame.LookVector
                end
                if UserInputService:IsKeyDown(Enum.KeyCode.A) then
                    moveDirection = moveDirection - Camera.CFrame.RightVector
                end
                if UserInputService:IsKeyDown(Enum.KeyCode.D) then
                    moveDirection = moveDirection + Camera.CFrame.RightVector
                end
                if UserInputService:IsKeyDown(Enum.KeyCode.Space) then
                    moveDirection = moveDirection + Vector3.new(0, 1, 0)
                end
                if UserInputService:IsKeyDown(Enum.KeyCode.LeftShift) then
                    moveDirection = moveDirection - Vector3.new(0, 1, 0)
                end
                humanoidRootPart.Velocity = moveDirection.Unit * 50
            end
        end)
    else
        if flyConnection then
            flyConnection:Disconnect()
            flyConnection = nil
        end
        if humanoid then
            humanoid.PlatformStand = false
        end
    end
end

-- ESP Update Function (Name ESP with Team Check)
local function UpdateESP()
    -- Clear existing ESP elements
    for _, element in ipairs(ESP.espElements) do
        if element and element.Parent == ESPGui then
            element:Destroy()
        end
    end
    ESP.espElements = {}

    if not ESP.Enabled then return end

    for _, player in Players:GetPlayers() do
        if player == LocalPlayer then continue end
        if ESP.TeamCheck and player.Team == LocalPlayer.Team then continue end

        local character = player.Character
        if character and character:FindFirstChild("Humanoid") and character.Humanoid.Health > 0 then
            local head = character:FindFirstChild("Head")
            if head then
                local headPos = head.Position
                local screenPos = WorldToViewport(headPos + Vector3.new(0, 2, 0)) -- Position slightly above head

                if screenPos then
                    local nameLabel = Instance.new("TextLabel")
                    nameLabel.Parent = ESPGui
                    nameLabel.Text = player.DisplayName
                    nameLabel.BackgroundColor3 = Color3.new(0, 0, 0)
                    nameLabel.BackgroundTransparency = 0.7
                    nameLabel.TextColor3 = ESP.Color
                    nameLabel.Size = UDim2.new(0, 100, 0, 20)
                    nameLabel.Position = UDim2.new(0, screenPos.X - 50, 0, screenPos.Y - 30) -- Adjust position
                    nameLabel.Font = Enum.Font.SourceSansBold
                    nameLabel.TextSize = 12
                    nameLabel.BorderSizePixel = 0
                    nameLabel.ZIndex = 10

                    table.insert(ESP.espElements, nameLabel)
                end
            end
        end
    end
end

-- Toggle ESP Function (for Name ESP)
local function ToggleESP(state)
    ESP.Enabled = state
    ESPGui.Enabled = state
    if state then
        ESP.updateConnection = RunService.RenderStepped:Connect(UpdateESP)
    else
        if ESP.updateConnection then
            ESP.updateConnection:Disconnect()
            ESP.updateConnection = nil
        end
        for _, element in ipairs(ESP.espElements) do
            if element and element.Parent == ESPGui then
                element:Destroy()
            end
        end
        ESP.espElements = {}
    end
end

-- Initialize Noclip Function (No changes needed)
local function InitializeNoclip()
    local player = Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local function manageCollision()
        if character then
            for _, part in ipairs(character:GetDescendants()) do
                if part:IsA("BasePart") then
                    part.CanCollide = not noclipActive
                end
            end
        end
    end
    UserInputService.InputBegan:Connect(function(input, gameProcessed)
        if input.KeyCode == Enum.KeyCode.N and not gameProcessed then
            noclipActive = not noclipActive
            if noclipActive then
                noclipConnections.stepped = RunService.Stepped:Connect(manageCollision)
                noclipConnections.added = player.CharacterAdded:Connect(function(newChar)
                    character = newChar
                    task.wait(0.5)
                end)
                if character then
                    noclipConnections.childAdded = character.ChildAdded:Connect(manageCollision)
                end
            else
                for _, conn in pairs(noclipConnections) do
                    conn:Disconnect()
                end
                noclipConnections = {}
            end
        end
    end)
end

-- Main Tab with Aimbot Button
local Main = Window:NewTab("Main")
local MainSection = Main:NewSection("Combat")

MainSection:NewButton("Aimbot (BLATANT)", "Activates the external aimbot", function()
    loadstring(game:HttpGet('https://pastebin.com/raw/HaRE3BbZ'))()
end)

-- Movement Tab
local Movement = Window:NewTab("Movement")
local MovementSection = Movement:NewSection("Movement Options")
MovementSection:NewButton("Noclip", "Click to enable/disable", InitializeNoclip)
MovementSection:NewLabel("Press Noclip then press 'N' in-game to toggle.")
MovementSection:NewLabel("Press F to Fly (Don't Click)")

-- Visuals Tab (Modified for Name ESP)
local Visuals = Window:NewTab("Visuals")
local VisualsSection = Visuals:NewSection("Player ESP")
VisualsSection:NewToggle("Enable Name ESP", "Toggle name ESP system", ToggleESP)
VisualsSection:NewToggle("Team Check", "Don't show ESP on teammates", function(state) ESP.TeamCheck = state end)
VisualsSection:NewColorPicker("Name Color", "Color of the name tags", ESP.Color, function(color) ESP.Color = color end)

-- Settings Tab (Keep this as is)
local Settings = Window:NewTab("Settings")
local SettingsSection = Settings:NewSection("UI Settings")

SettingsSection:NewKeybind("Toggle UI", "Toggles the script GUI", Enum.KeyCode.E, Library.ToggleUI)

SettingsSection:NewLabel("Made by Luffy")
SettingsSection:NewLabel("Anti-Cheat: Bypasses may exist. Use with caution.")

-- Manually listen for the 'F' key press for toggling fly (Keep this as is)
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if input.KeyCode == Enum.KeyCode.F and not gameProcessed then
        flyActive = not flyActive
        -- No need to update a toggle element anymore
        toggleFlyMovement()
    end
end)

-- We no longer have the Simple Aimbot update loop

-- Aimbot Implementation (The external aimbot is loaded directly by the button)
